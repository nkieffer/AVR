#include <avr/io.h>
#include <avr/interrupt.h>
#include <inttypes.h>
#include <util/delay.h>
#define FALLING_EDGE 0
#define RAISING_EDGE 1
/*
        _____          +----+
(PCINT5/RESET/ADC0)PB5-|    |- VCC
(PCINT3/!OC1B/ADC3)PB3-| AT |-PB2(USCK/SCL/ADC1/T0/INT0/PCINT2)
 (PCINT4/OC1B/ADC2)PB4-| 85 |-PB1(MISO/DO/AIN1/OC0B/PCINT1)
                   GND-|    |-PB0(MOSI/DI/SDA/AIN0/OC0A/!OC1A/AREF/PCINT0)
                       +----+
 */
volatile void (*fpt)(void);
uint8_t pinb = 0xff;
int bothon = 0;
volatile int ct = 5;
void interrupt1(){
  PORTB ^= _BV(PB2);
}

void interrupt2(){
  PORTB ^= _BV(PB0);
}

void interrupt3(){
  PORTB |= _BV(PB0) | _BV(PB1);
}

void dummy(){
  PORTB &= ~(_BV(PB2) | _BV(PB0)); 
  //  PORTB &= ~_BV(PB0);
};

ISR(PCINT0_vect){
  uint8_t changed = PINB ^ pinb;
  pinb = PINB;
  if((changed & _BV(PB3)) && ~(PINB & _BV(PB3))){
    if(PINB & _BV(PB4))
      //fpt = &interrupt1;
      ct++;
    else
      //fpt = &interrupt2;
      ct--;
  }
  if(~(pinb & _BV(PB1))){// && (changed & _BV(PB1))){
    // fpt = &interrupt3;
  }
}


int edge = RAISING_EDGE;

int main(void){
  DDRB |= _BV(PB0) | _BV(PB2);
  PORTB &= ~(_BV(PB0) | _BV(PB2));

  DDRB &= ~_BV(PB1);
  DDRB &= ~_BV(PB3);
  DDRB &= ~_BV(PB4);
  PORTB |= _BV(PB1) | _BV(PB3) | _BV(PB4); // pullup resistors

  GIMSK |= _BV(PCIE);
  PCMSK |= _BV (PB1) |_BV(PCINT3) | _BV(PCINT4);

  fpt = &dummy;
  sei();
  while(1){/*
    pinb = bit_is_set(PINB, PB1);
    pinb = edge == FALLING_EDGE ? !pinb : pinb;
    if(pinb && (pinb != oldpinb)){
      PORTB ^= _BV(PB0);
    }
    oldpinb = pinb;
	   */
    //if(bothon){
      //      PORTB |= _BV(PB0);//
      // PORTB |= _BV(PB2);
    //}
    //bothon = 0;
    if(ct == 5)
      PORTB |= _BV(PB2);
    if(ct != 5)
      PORTB |= _BV(PB0);
    _delay_ms(10);
    PORTB = 0x00;
    // (*fpt)();
    // fpt = &dummy;
  }
}
