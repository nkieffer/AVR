#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>
volatile int ct = 1;
uint8_t TA;
uint8_t TB;
ISR(TIM0_COMPA_vect){
  PORTB ^= (_BV(PB3) | _BV(PB4));
  ct++;
}
void setup(void){
  DDRB |= _BV(PB4) | _BV(PB3);
  PORTB = _BV(PB3);
  TCCR0A = _BV(WGM01);
  TCCR0B = _BV(CS02) | _BV(CS00);
  TIMSK0 |= _BV(OCIE0A);
  sei();
  

  TA = (F_CPU/(1024.0 * 4))-1;
  TB = (F_CPU/(1024.0 * 12))-1;
  OCR0A = 0xaa;//TA;
}

void loop(void){
  if(ct % 25  == 0){
    OCR0A ^= OCR0A + ((OCR0A << 2) | (OCR0A >> 3));
    OCR0A += ct;
  }
}

int main(void){
  setup();
  while(1) loop();
}
